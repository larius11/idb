{
	"info": {
		"name": "IDB Phase 3",
		"_postman_id": "77177658-3797-7c7a-fd14-dce7fe47763c",
		"description": "API tests for phase 2 of the Spring 2018 Software Engineering IDB project.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "State Base",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5ca4c925-262d-4764-b07c-51352ec7a6f0",
						"type": "text/javascript",
						"exec": [
							"// Correct status code?",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"// Matches schema?",
							"const statebaseSchema = {",
							"  \"title\": \"States\",",
							"  \"type\": \"object\",",
							"  \"properties\": {",
							"    \"results\": {",
							"      \"type\": \"array\",",
							"      \"description\": \"The list of states\",",
							"      \"items\": {",
							"        \"type\": \"object\",",
							"        \"properties\": {",
							"            \"abbreviation\": {",
							"              \"type\": \"string\",",
							"              \"description\": \"The unique identifier for a state\"",
							"            },",
							"            \"image\": {",
							"              \"type\": \"string\"",
							"            },",
							"            \"name\": {",
							"              \"type\": \"string\"",
							"            },",
							"            \"population\": {",
							"              \"type\": \"integer\",",
							"              \"description\": \"The unique identifier for a state\"",
							"            },",
							"            \"area\": {",
							"                \"type\": \"integer\"",
							"            },",
							"            \"bird\": {",
							"                \"type\": \"string\"",
							"            },",
							"            \"capital\": {",
							"                \"type\": \"string\"",
							"            },",
							"            \"flower\": {",
							"                \"type\": \"string\"",
							"            },",
							"            \"id\": {",
							"                \"type\": \"integer\"",
							"            },",
							"            ",
							"        },",
							"        \"required\": [\"abbreviation\", \"name\", \"population\"]",
							"      }",
							"    },",
							"    \"totalCount\": {",
							"      \"type\": \"integer\"",
							"    }",
							"  },",
							"  \"required\": [\"results\", \"totalCount\"]",
							"};",
							"",
							"var stateBaseResponse = JSON.parse(responseBody);",
							"tests[\"Valid JSON\"] = tv4.validate(stateBaseResponse, statebaseSchema);",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://api.ontherun.me:5000/states",
					"protocol": "http",
					"host": [
						"api",
						"ontherun",
						"me"
					],
					"port": "5000",
					"path": [
						"states"
					]
				}
			},
			"response": []
		},
		{
			"name": "State Specific Abbrev",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "043da539-5685-4a96-bf33-be8a79e6715e",
						"type": "text/javascript",
						"exec": [
							"// Correct status code?",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"// Matches schema?",
							"const stateSchema = {",
							"\t\"title\": \"States\",",
							"\t\"type\": \"object\",",
							"\t\"properties\": {",
							"\t\t\"items\": {",
							"\t\t\t\"type\": \"object\",",
							"\t\t\t\"abbreviation\": {",
							"\t\t\t\t\"type\": \"string\",",
							"\t\t\t\t\"description\": \"The unique identifier for a state\"",
							"\t\t\t},",
							"\t\t\t\"name\": {",
							"\t\t\t\t\"type\": \"string\"",
							"\t\t\t},",
							"\t\t\t\"capital\": {",
							"\t\t\t\t\"type\": \"string\"",
							"\t\t\t},",
							"\t\t\t\"population\": {",
							"\t\t\t\t\"type\": \"integer\",",
							"\t\t\t\t\"description\": \"The unique identifier for a state\"",
							"\t\t\t},",
							"",
							"\t\t\t\"required\": [\"abbreviation\", \"name\", \"population\"]",
							"\t\t}",
							"\t}",
							"};",
							"",
							"var stateResponse = JSON.parse(responseBody);",
							"tests[\"Valid JSON\"] = tv4.validate(stateResponse, stateSchema);",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://api.ontherun.me:5000/states/AL",
					"protocol": "http",
					"host": [
						"api",
						"ontherun",
						"me"
					],
					"port": "5000",
					"path": [
						"states",
						"AL"
					]
				}
			},
			"response": []
		},
		{
			"name": "State Specific ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "043da539-5685-4a96-bf33-be8a79e6715e",
						"type": "text/javascript",
						"exec": [
							"// Correct status code?",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"// Matches schema?",
							"const stateSchema = {",
							"\t\"title\": \"States\",",
							"\t\"type\": \"object\",",
							"\t\"properties\": {",
							"\t\t\"items\": {",
							"\t\t\t\"type\": \"object\",",
							"\t\t\t\"abbreviation\": {",
							"\t\t\t\t\"type\": \"string\",",
							"\t\t\t\t\"description\": \"The unique identifier for a state\"",
							"\t\t\t},",
							"\t\t\t\"name\": {",
							"\t\t\t\t\"type\": \"string\"",
							"\t\t\t},",
							"\t\t\t\"capital\": {",
							"\t\t\t\t\"type\": \"string\"",
							"\t\t\t},",
							"\t\t\t\"population\": {",
							"\t\t\t\t\"type\": \"integer\",",
							"\t\t\t\t\"description\": \"The unique identifier for a state\"",
							"\t\t\t},",
							"",
							"\t\t\t\"required\": [\"abbreviation\", \"name\", \"population\"]",
							"\t\t}",
							"\t}",
							"};",
							"",
							"var stateResponse = JSON.parse(responseBody);",
							"tests[\"Valid JSON\"] = tv4.validate(stateResponse, stateSchema);",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://api.ontherun.me:5000/states/24",
					"protocol": "http",
					"host": [
						"api",
						"ontherun",
						"me"
					],
					"port": "5000",
					"path": [
						"states",
						"24"
					]
				}
			},
			"response": []
		},
		{
			"name": "Criminal Base",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3c7f8ab4-b290-4dc6-b64c-ca751fea92f6",
						"type": "text/javascript",
						"exec": [
							"// Status code?",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// Matches schema?",
							"const criminalbaseSchema = {",
							"  \"title\": \"Criminals\",",
							"  \"type\": \"object\",",
							"  \"properties\": {",
							"    \"results\": {",
							"      \"type\": \"array\",",
							"      \"description\": \"The list of criminals\",",
							"      \"items\": {",
							"        \"type\": \"object\",",
							"        \"properties\": {",
							"            \"dob\": {",
							"              \"type\": [\"string\", \"null\"]",
							"            },",
							"            \"eyes\": {",
							"              \"type\": [\"string\", \"null\"]",
							"            },",
							"            \"field_office\": {",
							"              \"type\": [\"string\", \"null\"]",
							"            },",
							"            \"hair\": {",
							"              \"type\": [\"string\", \"null\"]",
							"            },",
							"            \"height\": {",
							"              \"type\": [\"integer\", \"null\"]",
							"            },",
							"            \"id\": {",
							"              \"type\": \"integer\",",
							"              \"description\": \"The unique identifier for a criminal\"",
							"            },",
							"            \"image\": {",
							"              \"type\": [\"string\", \"null\"]",
							"            },",
							"            \"name\": {",
							"              \"type\": [\"string\", \"null\"]",
							"            },",
							"            \"nationality\": {",
							"              \"type\": [\"string\", \"null\"]",
							"            },",
							"            \"race\": {",
							"              \"type\": [\"string\", \"null\"]",
							"            },",
							"            \"sex\": {",
							"              \"type\": [\"string\", \"null\"]",
							"            },",
							"            \"weight\": {",
							"              \"type\": [\"integer\", \"null\"]",
							"            },",
							"            \"state\": {",
							"                \"type\": \"string\"",
							"            },",
							"        },",
							"        \"required\": [\"name\", \"id\"]",
							"      }",
							"    },",
							"    \"totalCount\": {",
							"      \"type\": \"integer\"",
							"    }",
							"  },",
							"  \"required\": [\"results\", \"totalCount\"]",
							"};",
							"",
							"var crims = JSON.parse(responseBody);",
							"tests[\"Valid JSON\"] = tv4.validate(crims, criminalbaseSchema);"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://api.ontherun.me:5000/criminals",
					"protocol": "http",
					"host": [
						"api",
						"ontherun",
						"me"
					],
					"port": "5000",
					"path": [
						"criminals"
					]
				}
			},
			"response": []
		},
		{
			"name": "Criminal Specific",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "50f838b4-29a4-4cb4-8cb1-e7c4652e52df",
						"type": "text/javascript",
						"exec": [
							"// Correct status code?",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"// Matches schema?",
							"const crimSchema = {",
							"  \"title\": \"Criminal\",",
							"  \"type\": \"object\",",
							"  \"description\": \"A data entry for one criminal.\",",
							"  \"properties\": {",
							"    \"items\": {",
							"      \"type\": \"object\",",
							"        \"properties\": {",
							"          \"id\": {",
							"            \"type\": \"integer\",",
							"            \"description\": \"The unique identifier for a criminal\"",
							"          },",
							"          \"name\": {",
							"            \"type\": \"string\"",
							"          },",
							"          \"crime\": {",
							"            \"type\": \"string\"",
							"          },",
							"          \"dob\": {",
							"            \"type\": \"string\"",
							"          },",
							"          \"eyes\": {",
							"            \"type\": \"string\"",
							"          },",
							"          \"field_office\": {",
							"            \"type\": \"string\"",
							"          },",
							"          \"hair\": {",
							"            \"type\": \"string\"",
							"          },",
							"          \"nationality\": {",
							"            \"type\": \"string\"",
							"          },",
							"          \"race\": {",
							"            \"type\": \"string\"",
							"          },",
							"          \"sex\": {",
							"            \"type\": \"string\"",
							"          },",
							"          \"height\": {",
							"            \"type\": \"integer\"",
							"          },",
							"          \"weight\": {",
							"            \"type\": \"integer\"",
							"          }",
							"      },",
							"      \"required\": [\"name\", \"id\", \"crime\"]",
							"      }",
							"  }",
							"};",
							"",
							"var crim = JSON.parse(responseBody);",
							"tests[\"Valid JSON\"] = tv4.validate(crim, crimSchema);",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://api.ontherun.me:5000/criminals/2",
					"protocol": "http",
					"host": [
						"api",
						"ontherun",
						"me"
					],
					"port": "5000",
					"path": [
						"criminals",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crime Base",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bbe7dcf2-1639-4ab0-be2e-d9a2d8ecc449",
						"type": "text/javascript",
						"exec": [
							"// Status code?",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// Matches schema?",
							"const crimebaseSchema = {",
							" \"title\": \"Crimes\",",
							" \"type\": \"object\",",
							" \"properties\": {",
							"   \"results\": {",
							"     \"type\": \"array\",",
							"     \"description\": \"The list of crimes\",",
							"     \"items\": {",
							"       \"type\": \"object\",",
							"       \"properties\": {",
							"           \"description\": {",
							"             \"type\": \"string\"",
							"           },",
							"           \"id\": {",
							"              \"type\": \"integer\"",
							"           },",
							"           \"image\": {",
							"              \"type\": \"string\"",
							"           },",
							"           \"name\": {",
							"             \"type\": \"string\",",
							"             \"description\": \"The unique identifier for a state\"",
							"           }",
							"       },",
							"       \"required\": [\"id\", \"name\"]",
							"     }",
							"   },",
							"   \"totalCount\": {",
							"      \"type\": \"integer\"",
							"   }",
							" },",
							" \"required\": [\"results\"]",
							"};",
							"",
							"var crimes = JSON.parse(responseBody);",
							"tests[\"Valid JSON\"] = tv4.validate(crimes, crimebaseSchema);",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "api.ontherun.me:5000/crimes",
					"host": [
						"api",
						"ontherun",
						"me"
					],
					"port": "5000",
					"path": [
						"crimes"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crime Specific",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "667c2a4a-e1f4-4278-8d10-b6aee78be91f",
						"type": "text/javascript",
						"exec": [
							"// Correct status code?",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"// Matches schema?",
							"const crimeSchema = {",
							"\t\"title\": \"Crimes\",",
							"\t\"type\": \"object\",",
							"\t\"properties\": {",
							"\t\t\"items\": {",
							"\t\t\t\"type\": \"object\",",
							"\t\t\t\"properties\": {",
							"\t\t\t\t\"id\": {",
							"\t\t\t\t\t\"type\": \"integer\",",
							"\t\t\t\t\t\"description\": \"The unique identifier for a state\"",
							"\t\t\t\t},",
							"\t\t\t\t\"name\": {",
							"\t\t\t\t\t\"type\": \"string\",",
							"\t\t\t\t\t\"description\": \"The unique identifier for a state\"",
							"\t\t\t\t},",
							"\t\t\t\t\"count\": {",
							"\t\t\t\t\t\"type\": \"integer\",",
							"\t\t\t\t\t\"description\": \"number of counts of this crime nationally\"",
							"\t\t\t\t},",
							"\t\t\t\t\"offenders\": {",
							"\t\t\t\t\t\"type\": \"integer\"",
							"\t\t\t\t},",
							"\t\t\t\t\"victims\": {",
							"\t\t\t\t\t\"type\": \"integer\"",
							"\t\t\t\t},",
							"\t\t\t\t\"perpopulation\": {",
							"\t\t\t\t\t\"type\": \"number\",",
							"\t\t\t\t\t\"description\": \"number of counts/100000 national pop.\"",
							"\t\t\t\t}",
							"\t\t\t},",
							"\t\t\t\"required\": [\"id\", \"name\"]",
							"\t\t}",
							"\t}",
							"};",
							"",
							"var crime = JSON.parse(responseBody);",
							"tests[\"Valid JSON\"] = tv4.validate(crime, crimeSchema);",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://api.ontherun.me:5000/crimes/2",
					"protocol": "http",
					"host": [
						"api",
						"ontherun",
						"me"
					],
					"port": "5000",
					"path": [
						"crimes",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crimes To State",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cdcca865-9d34-47ea-9fdb-b2db1e092fcd",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"response is ok\", function() {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const schema = {",
							"  \"title\": \"CrimesToState\",",
							"  \"type\": \"array\",",
							"    \"items\": {",
							"      \"type\": \"object\",",
							"      \"properties\": {",
							"        \"crime_id\": {",
							"          \"type\": \"integer\"",
							"        },",
							"        \"crime_name\": {",
							"          \"type\": \"string\"",
							"        },",
							"        \"id\": {",
							"          \"type\": \"integer\"",
							"        },",
							"        \"state_abbreviation\": {",
							"          \"type\": \"string\"",
							"        },",
							"        \"state_id\": {",
							"          \"type\": \"integer\"",
							"        }",
							"      },",
							"      \"required\": [\"crime_id\", \"crime_name\", \"id\", \"state_abbreviation\", \"state_id\"]",
							"  }",
							"}",
							"var jsonData = pm.response.json();",
							"tests[\"Valid JSON\"] = tv4.validate(jsonData, schema);",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://api.ontherun.me:5000/crimestostate",
					"protocol": "http",
					"host": [
						"api",
						"ontherun",
						"me"
					],
					"port": "5000",
					"path": [
						"crimestostate"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crimes To State Specific",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "03acc089-a514-4791-8610-6d2337e0b3a9",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"response is ok\", function() {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const schema = {",
							"  \"title\": \"CrimesToState\",",
							"  \"type\": \"array\",",
							"    \"items\": {",
							"      \"type\": \"object\",",
							"      \"properties\": {",
							"        \"crime_id\": {",
							"          \"type\": \"integer\"",
							"        },",
							"        \"crime_name\": {",
							"          \"type\": \"string\"",
							"        },",
							"        \"id\": {",
							"          \"type\": \"integer\"",
							"        },",
							"        \"state_abbreviation\": {",
							"          \"type\": \"string\"",
							"        },",
							"        \"state_id\": {",
							"          \"type\": \"integer\"",
							"        }",
							"      },",
							"      \"required\": [\"crime_id\", \"crime_name\", \"id\", \"state_abbreviation\", \"state_id\"]",
							"  }",
							"}",
							"var jsonData = pm.response.json();",
							"tests[\"Valid JSON\"] = tv4.validate(jsonData, schema);",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://api.ontherun.me:5000/crimestostate/4",
					"protocol": "http",
					"host": [
						"api",
						"ontherun",
						"me"
					],
					"port": "5000",
					"path": [
						"crimestostate",
						"4"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crimes to Criminals",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b49ec351-2e47-4b8d-ab3d-d8f7f1f68027",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"crimesToCriminalsSchema = {",
							"  \"$id\": \"http://example.com/example.json\",",
							"  \"type\": \"array\",",
							"  \"definitions\": {},",
							"  \"$schema\": \"http://json-schema.org/draft-07/schema#\",",
							"  \"items\": {",
							"    \"$id\": \"http://example.com/example.json/items\",",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"      \"crime_id\": {",
							"        \"$id\": \"http://example.com/example.json/items/properties/crime_id\",",
							"        \"type\": \"integer\",",
							"        \"title\": \"The Crime_id Schema \",",
							"        \"default\": 0,",
							"        \"examples\": [",
							"          38",
							"        ]",
							"      },",
							"      \"crime_name\": {",
							"        \"$id\": \"http://example.com/example.json/items/properties/crime_name\",",
							"        \"type\": \"string\",",
							"        \"title\": \"The Crime_name Schema \",",
							"        \"default\": \"\",",
							"        \"examples\": [",
							"          \"Robbery\"",
							"        ]",
							"      },",
							"      \"criminal_id\": {",
							"        \"$id\": \"http://example.com/example.json/items/properties/criminal_id\",",
							"        \"type\": \"integer\",",
							"        \"title\": \"The Criminal_id Schema \",",
							"        \"default\": 0,",
							"        \"examples\": [",
							"          1",
							"        ]",
							"      },",
							"      \"criminal_name\": {",
							"        \"$id\": \"http://example.com/example.json/items/properties/criminal_name\",",
							"        \"type\": \"string\",",
							"        \"title\": \"The Criminal_name Schema \",",
							"        \"default\": \"\",",
							"        \"examples\": [",
							"          \"BRIAN WILLIE NELSON\"",
							"        ]",
							"      },",
							"      \"id\": {",
							"        \"$id\": \"http://example.com/example.json/items/properties/id\",",
							"        \"type\": \"integer\",",
							"        \"title\": \"The Id Schema \",",
							"        \"default\": 0,",
							"        \"examples\": [",
							"          1",
							"        ]",
							"      }",
							"    }",
							"  }",
							"};",
							"",
							"var cc = JSON.parse(responseBody);",
							"tests[\"Valid JSON\"] = tv4.validate(cc, crimesToCriminalsSchema);"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.ontherun.me:5000/crimestocriminals",
					"protocol": "http",
					"host": [
						"api",
						"ontherun",
						"me"
					],
					"port": "5000",
					"path": [
						"crimestocriminals"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Crime to Criminal Specific",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bec541cd-58ed-4338-b551-e1781b6beee7",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"schema = {",
							"  \"$id\": \"http://example.com/example.json\",",
							"  \"type\": \"array\",",
							"  \"definitions\": {},",
							"  \"$schema\": \"http://json-schema.org/draft-07/schema#\",",
							"  \"items\": {",
							"    \"$id\": \"http://example.com/example.json/items\",",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"      \"crime_id\": {",
							"        \"$id\": \"http://example.com/example.json/items/properties/crime_id\",",
							"        \"type\": \"integer\",",
							"        \"title\": \"The Crime_id Schema \",",
							"        \"default\": 0,",
							"        \"examples\": [",
							"          1",
							"        ]",
							"      },",
							"      \"crime_name\": {",
							"        \"$id\": \"http://example.com/example.json/items/properties/crime_name\",",
							"        \"type\": \"string\",",
							"        \"title\": \"The Crime_name Schema \",",
							"        \"default\": \"\",",
							"        \"examples\": [",
							"          \"Aggravated Assault\"",
							"        ]",
							"      },",
							"      \"criminal_id\": {",
							"        \"$id\": \"http://example.com/example.json/items/properties/criminal_id\",",
							"        \"type\": \"integer\",",
							"        \"title\": \"The Criminal_id Schema \",",
							"        \"default\": 0,",
							"        \"examples\": [",
							"          3",
							"        ]",
							"      },",
							"      \"criminal_name\": {",
							"        \"$id\": \"http://example.com/example.json/items/properties/criminal_name\",",
							"        \"type\": \"string\",",
							"        \"title\": \"The Criminal_name Schema \",",
							"        \"default\": \"\",",
							"        \"examples\": [",
							"          \"GREG ALYN CARLSON\"",
							"        ]",
							"      },",
							"      \"id\": {",
							"        \"$id\": \"http://example.com/example.json/items/properties/id\",",
							"        \"type\": \"integer\",",
							"        \"title\": \"The Id Schema \",",
							"        \"default\": 0,",
							"        \"examples\": [",
							"          \"GREG ALYN CARLSON\"",
							"        ]",
							"      }",
							"    }",
							"  }",
							"};",
							"",
							"var cc = JSON.parse(responseBody);",
							"tests[\"Valid JSON\"] = tv4.validate(cc, schema);"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.ontherun.me:5000/crimetocriminals/1",
					"protocol": "http",
					"host": [
						"api",
						"ontherun",
						"me"
					],
					"port": "5000",
					"path": [
						"crimetocriminals",
						"1"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Criminal To Crimes (crime ID)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4f8fe7f5-e7fe-4f38-932e-8508b95177dc",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var schema = {",
							"  \"$id\": \"http://example.com/example.json\",",
							"  \"type\": \"array\",",
							"  \"definitions\": {},",
							"  \"$schema\": \"http://json-schema.org/draft-07/schema#\",",
							"  \"items\": {",
							"    \"$id\": \"http://example.com/example.json/items\",",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"      \"crime_id\": {",
							"        \"$id\": \"http://example.com/example.json/items/properties/crime_id\",",
							"        \"type\": \"integer\",",
							"        \"title\": \"The Crime_id Schema \",",
							"        \"default\": 0,",
							"        \"examples\": [",
							"          38",
							"        ]",
							"      },",
							"      \"crime_name\": {",
							"        \"$id\": \"http://example.com/example.json/items/properties/crime_name\",",
							"        \"type\": \"string\",",
							"        \"title\": \"The Crime_name Schema \",",
							"        \"default\": \"\",",
							"        \"examples\": [",
							"          \"Robbery\"",
							"        ]",
							"      },",
							"      \"criminal_id\": {",
							"        \"$id\": \"http://example.com/example.json/items/properties/criminal_id\",",
							"        \"type\": \"integer\",",
							"        \"title\": \"The Criminal_id Schema \",",
							"        \"default\": 0,",
							"        \"examples\": [",
							"          1",
							"        ]",
							"      },",
							"      \"criminal_name\": {",
							"        \"$id\": \"http://example.com/example.json/items/properties/criminal_name\",",
							"        \"type\": \"string\",",
							"        \"title\": \"The Criminal_name Schema \",",
							"        \"default\": \"\",",
							"        \"examples\": [",
							"          \"BRIAN WILLIE NELSON\"",
							"        ]",
							"      },",
							"      \"id\": {",
							"        \"$id\": \"http://example.com/example.json/items/properties/id\",",
							"        \"type\": \"integer\",",
							"        \"title\": \"The Id Schema \",",
							"        \"default\": 0,",
							"        \"examples\": [",
							"          1",
							"        ]",
							"      }",
							"    }",
							"  }",
							"};",
							"",
							"var cc = JSON.parse(responseBody);",
							"tests[\"Valid JSON\"] = tv4.validate(cc, schema);"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.ontherun.me:5000/criminaltocrimes/1",
					"protocol": "http",
					"host": [
						"api",
						"ontherun",
						"me"
					],
					"port": "5000",
					"path": [
						"criminaltocrimes",
						"1"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Criminals to State",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "42a22d60-3b35-4ee0-bde1-b7d0ca447adb",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var schema = {",
							"  \"$id\": \"http://example.com/example.json\",",
							"  \"type\": \"array\",",
							"  \"definitions\": {},",
							"  \"$schema\": \"http://json-schema.org/draft-07/schema#\",",
							"  \"items\": {",
							"    \"$id\": \"http://example.com/example.json/items\",",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"      \"id\": {",
							"        \"$id\": \"http://example.com/example.json/items/properties/id\",",
							"        \"type\": \"integer\",",
							"        \"title\": \"The Id Schema \",",
							"        \"default\": 0,",
							"        \"examples\": [",
							"          19",
							"        ]",
							"      },",
							"      \"state\": {",
							"        \"$id\": \"http://example.com/example.json/items/properties/state\",",
							"        \"type\": \"string\",",
							"        \"title\": \"The State Schema \",",
							"        \"default\": \"\",",
							"        \"examples\": [",
							"          \"AL\"",
							"        ]",
							"      }",
							"    }",
							"  }",
							"};",
							"",
							"var cc = JSON.parse(responseBody);",
							"tests[\"Valid JSON\"] = tv4.validate(cc, schema);"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.ontherun.me:5000/criminalstostate",
					"protocol": "http",
					"host": [
						"api",
						"ontherun",
						"me"
					],
					"port": "5000",
					"path": [
						"criminalstostate"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Criminals to state specific",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c06bd3d4-6ab9-452e-b788-48bb509ebb2d",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var schema = {",
							"  \"$id\": \"http://example.com/example.json\",",
							"  \"type\": \"array\",",
							"  \"items\": {",
							"    \"$id\": \"http://example.com/example.json/items\",",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"      \"crime\": {",
							"        \"$id\": \"http://example.com/example.json/items/properties/crime\",",
							"        \"type\": \"string\",",
							"        \"title\": \"The Crime Schema \",",
							"        \"default\": \"\",",
							"        \"examples\": [",
							"          \"<p><a href=\\\"https://www.fbi.gov/wanted/parental-kidnappings/leslie-delbecq\\\" data-urltype=\\\"/view\\\" data-val=\\\"https://www.fbi.gov/wanted/parental-kidnappings/leslie-delbecq\\\" data-linktype=\\\"external\\\">Leslie Delbecq</a> and her parents, Jeanine De Riddere and <a href=\\\"https://www.fbi.gov/wanted/parental-kidnappings/philippe-delbecq\\\" data-urltype=\\\"/view\\\" data-val=\\\"https://www.fbi.gov/wanted/parental-kidnappings/philippe-delbecq\\\" data-linktype=\\\"external\\\">Philippe Delbecq</a>, are wanted for their alleged involvement in the kidnapping of Leslie Delbecq's daughter, <a href=\\\"https://www.fbi.gov/wanted/parental-kidnappings/leslie-delbecq/gabrielle-dahm\\\" data-urltype=\\\"/view\\\" data-val=\\\"https://www.fbi.gov/wanted/parental-kidnappings/leslie-delbecq/gabrielle-dahm\\\" data-linktype=\\\"external\\\">Gabrielle Dahm</a>, from Broward County, Florida, in 2010. Leslie Delbecq is the ex-wife of Christopher Dahm, Gabrielle's biological father. In January 2010, during a court hearing in Florida, Delbecq and Dahm were awarded joint custody of Gabrielle.</p>\\r\\n<p> </p>\\r\\n<p>However, it is alleged that Leslie Delbecq and Jeanine De Riddere arranged for Gabrielle to be taken from Florida on August 2, 2010, and arrive in Abu Dhabi, United Arab Emirates, on August 4, 2010. All of their tickets to Abu Dhabi allegedly were purchased through an airline employee, Philippe Delbecq, the father of Leslie Delbecq. On August 4, 2010, Leslie Delbecq failed to return Gabrielle to her father, Christopher Dahm, as stated in the Broward County Court order. Gabrielle is believed to have been moved to Abu Dhabi in violation of the court order that denied Leslie Delbecq's request to relocate to Abu Dhabi with Gabrielle, and stated that Gabrielle is to remain in the United States.</p>\\r\\n<p> </p>\\r\\n<p>On June 21, 2011, Leslie Delbecq, Jeanine De Riddere and Philippe Delbecq were indicted for international parental kidnapping by a Federal Grand Jury for the United States District Court, Southern District of Florida. Federal warrants were issued for their arrests.</p>\"",
							"        ]",
							"      },",
							"      \"dob\": {",
							"        \"$id\": \"http://example.com/example.json/items/properties/dob\",",
							"        \"type\": \"string\",",
							"        \"title\": \"The Dob Schema \",",
							"        \"default\": \"\",",
							"        \"examples\": [",
							"          \"April 24, 1955\"",
							"        ]",
							"      },",
							"      \"eyes\": {",
							"        \"$id\": \"http://example.com/example.json/items/properties/eyes\",",
							"        \"type\": [",
							"          \"string\",",
							"          \"null\"",
							"        ],",
							"        \"title\": \"The Eyes Schema \",",
							"        \"default\": \"\",",
							"        \"examples\": [",
							"          \"brown\"",
							"        ]",
							"      },",
							"      \"field_office\": {",
							"        \"$id\": \"http://example.com/example.json/items/properties/field_office\",",
							"        \"type\": \"string\",",
							"        \"title\": \"The Field_office Schema \",",
							"        \"default\": \"\",",
							"        \"examples\": [",
							"          \"miami\"",
							"        ]",
							"      },",
							"      \"hair\": {",
							"        \"$id\": \"http://example.com/example.json/items/properties/hair\",",
							"        \"type\": [",
							"          \"string\",",
							"          \"null\"",
							"        ],",
							"        \"title\": \"The Hair Schema \",",
							"        \"default\": \"\",",
							"        \"examples\": [",
							"          \"brown\"",
							"        ]",
							"      },",
							"      \"height\": {",
							"        \"$id\": \"http://example.com/example.json/items/properties/height\",",
							"        \"type\": [",
							"          \"integer\",",
							"          \"null\"",
							"        ],",
							"        \"title\": \"The Height Schema \",",
							"        \"default\": null,",
							"        \"examples\": [",
							"          null",
							"        ]",
							"      },",
							"      \"id\": {",
							"        \"$id\": \"http://example.com/example.json/items/properties/id\",",
							"        \"type\": \"integer\",",
							"        \"title\": \"The Id Schema \",",
							"        \"default\": 0,",
							"        \"examples\": [",
							"          124",
							"        ]",
							"      },",
							"      \"image\": {",
							"        \"$id\": \"http://example.com/example.json/items/properties/image\",",
							"        \"type\": \"string\",",
							"        \"title\": \"The Image Schema \",",
							"        \"default\": \"\",",
							"        \"examples\": [",
							"          \"https://www.fbi.gov/wanted/parental-kidnappings/jeanine-deriddere/@@images/image/large\"",
							"        ]",
							"      },",
							"      \"name\": {",
							"        \"$id\": \"http://example.com/example.json/items/properties/name\",",
							"        \"type\": \"string\",",
							"        \"title\": \"The Name Schema \",",
							"        \"default\": \"\",",
							"        \"examples\": [",
							"          \"JEANINE DE RIDDERE\"",
							"        ]",
							"      },",
							"      \"nationality\": {",
							"        \"$id\": \"http://example.com/example.json/items/properties/nationality\",",
							"        \"type\": [",
							"          \"string\",",
							"          \"null\"",
							"        ],",
							"        \"title\": \"The Nationality Schema \",",
							"        \"default\": \"\",",
							"        \"examples\": [",
							"          \"Congolese\"",
							"        ]",
							"      },",
							"      \"race\": {",
							"        \"$id\": \"http://example.com/example.json/items/properties/race\",",
							"        \"type\": [",
							"          \"string\",",
							"          \"null\"",
							"        ],",
							"        \"title\": \"The Race Schema \",",
							"        \"default\": \"\",",
							"        \"examples\": [",
							"          \"White\"",
							"        ]",
							"      },",
							"      \"sex\": {",
							"        \"$id\": \"http://example.com/example.json/items/properties/sex\",",
							"        \"type\": \"string\",",
							"        \"title\": \"The Sex Schema \",",
							"        \"default\": \"\",",
							"        \"examples\": [",
							"          \"Female\"",
							"        ]",
							"      },",
							"      \"state\": {",
							"        \"$id\": \"http://example.com/example.json/items/properties/state\",",
							"        \"type\": \"string\",",
							"        \"title\": \"The State Schema \",",
							"        \"default\": \"\",",
							"        \"examples\": [",
							"          \"AR\"",
							"        ]",
							"      },",
							"      \"type\": {",
							"        \"$id\": \"http://example.com/example.json/items/properties/type\",",
							"        \"type\": \"string\",",
							"        \"title\": \"The Type Schema \",",
							"        \"default\": \"\",",
							"        \"examples\": [",
							"          \"criminal\"",
							"        ]",
							"      },",
							"      \"weight\": {",
							"        \"$id\": \"http://example.com/example.json/items/properties/weight\",",
							"        \"type\": [",
							"          \"integer\",",
							"          \"null\"",
							"        ],",
							"        \"title\": \"The Weight Schema \",",
							"        \"default\": null,",
							"        \"examples\": [",
							"          null",
							"        ]",
							"      }",
							"    }",
							"  }",
							"};",
							"",
							"var cc = JSON.parse(responseBody);",
							"tests[\"Valid JSON\"] = tv4.validate(cc, schema);"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.ontherun.me:5000/criminalstostate/AR",
					"protocol": "http",
					"host": [
						"api",
						"ontherun",
						"me"
					],
					"port": "5000",
					"path": [
						"criminalstostate",
						"AR"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Crimes to state specific abbreviation",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d7a26181-cfe4-4809-80b0-fa3845529884",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var schema = {",
							"  \"$id\": \"http://example.com/example.json\",",
							"  \"type\": \"array\",",
							"  \"definitions\": {},",
							"  \"$schema\": \"http://json-schema.org/draft-07/schema#\",",
							"  \"items\": {",
							"    \"$id\": \"http://example.com/example.json/items\",",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"      \"crime_id\": {",
							"        \"$id\": \"http://example.com/example.json/items/properties/crime_id\",",
							"        \"type\": \"integer\",",
							"        \"title\": \"The Crime_id Schema \",",
							"        \"default\": 0,",
							"        \"examples\": [",
							"          1",
							"        ]",
							"      },",
							"      \"crime_name\": {",
							"        \"$id\": \"http://example.com/example.json/items/properties/crime_name\",",
							"        \"type\": \"string\",",
							"        \"title\": \"The Crime_name Schema \",",
							"        \"default\": \"\",",
							"        \"examples\": [",
							"          \"Aggravated Assault\"",
							"        ]",
							"      },",
							"      \"id\": {",
							"        \"$id\": \"http://example.com/example.json/items/properties/id\",",
							"        \"type\": \"integer\",",
							"        \"title\": \"The Id Schema \",",
							"        \"default\": 0,",
							"        \"examples\": [",
							"          74",
							"        ]",
							"      },",
							"      \"state_abbreviation\": {",
							"        \"$id\": \"http://example.com/example.json/items/properties/state_abbreviation\",",
							"        \"type\": \"string\",",
							"        \"title\": \"The State_abbreviation Schema \",",
							"        \"default\": \"\",",
							"        \"examples\": [",
							"          \"AR\"",
							"        ]",
							"      },",
							"      \"state_id\": {",
							"        \"$id\": \"http://example.com/example.json/items/properties/state_id\",",
							"        \"type\": \"integer\",",
							"        \"title\": \"The State_id Schema \",",
							"        \"default\": 0,",
							"        \"examples\": [",
							"          \"AR\"",
							"        ]",
							"      },",
							"      \"state_name\": {",
							"        \"$id\": \"http://example.com/example.json/items/properties/state_name\",",
							"        \"type\": \"string\",",
							"        \"title\": \"The State_name Schema \",",
							"        \"default\": \"\",",
							"        \"examples\": [",
							"          \"Arkansas\"",
							"        ]",
							"      }",
							"    }",
							"  }",
							"};",
							"",
							"var cc = JSON.parse(responseBody);",
							"tests[\"Valid JSON\"] = tv4.validate(cc, schema);"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.ontherun.me:5000/crimestostate/AR",
					"protocol": "http",
					"host": [
						"api",
						"ontherun",
						"me"
					],
					"port": "5000",
					"path": [
						"crimestostate",
						"AR"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Crimes/State/state-id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "186ea380-c2a2-4154-9c62-3339524ad1e3",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var schema = {",
							"  \"$id\": \"http://example.com/example.json\",",
							"  \"type\": \"array\",",
							"  \"definitions\": {},",
							"  \"$schema\": \"http://json-schema.org/draft-07/schema#\",",
							"  \"items\": {",
							"    \"$id\": \"http://example.com/example.json/items\",",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"      \"crime_id\": {",
							"        \"$id\": \"http://example.com/example.json/items/properties/crime_id\",",
							"        \"type\": \"integer\",",
							"        \"title\": \"The Crime_id Schema \",",
							"        \"default\": 0,",
							"        \"examples\": [",
							"          1",
							"        ]",
							"      },",
							"      \"crime_name\": {",
							"        \"$id\": \"http://example.com/example.json/items/properties/crime_name\",",
							"        \"type\": \"string\",",
							"        \"title\": \"The Crime_name Schema \",",
							"        \"default\": \"\",",
							"        \"examples\": [",
							"          \"Aggravated Assault\"",
							"        ]",
							"      },",
							"      \"id\": {",
							"        \"$id\": \"http://example.com/example.json/items/properties/id\",",
							"        \"type\": \"integer\",",
							"        \"title\": \"The Id Schema \",",
							"        \"default\": 0,",
							"        \"examples\": [",
							"          74",
							"        ]",
							"      },",
							"      \"state_abbreviation\": {",
							"        \"$id\": \"http://example.com/example.json/items/properties/state_abbreviation\",",
							"        \"type\": \"string\",",
							"        \"title\": \"The State_abbreviation Schema \",",
							"        \"default\": \"\",",
							"        \"examples\": [",
							"          \"AR\"",
							"        ]",
							"      },",
							"      \"state_id\": {",
							"        \"$id\": \"http://example.com/example.json/items/properties/state_id\",",
							"        \"type\": \"integer\",",
							"        \"title\": \"The State_id Schema \",",
							"        \"default\": 0,",
							"        \"examples\": [",
							"          \"AR\"",
							"        ]",
							"      },",
							"      \"state_name\": {",
							"        \"$id\": \"http://example.com/example.json/items/properties/state_name\",",
							"        \"type\": \"string\",",
							"        \"title\": \"The State_name Schema \",",
							"        \"default\": \"\",",
							"        \"examples\": [",
							"          \"Arkansas\"",
							"        ]",
							"      }",
							"    }",
							"  }",
							"};",
							"",
							"var cc = JSON.parse(responseBody);",
							"tests[\"Valid JSON\"] = tv4.validate(cc, schema);"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.ontherun.me:5000/crimes/state/4",
					"protocol": "http",
					"host": [
						"api",
						"ontherun",
						"me"
					],
					"port": "5000",
					"path": [
						"crimes",
						"state",
						"4"
					]
				},
				"description": ""
			},
			"response": []
		}
	]
}